{"version":3,"sources":["components/Card.js","components/Section.js","components/HeroSection.js","components/NavBar.js","App.js","index.js"],"names":["Card","_ref","movie","_useState","useState","_useState2","_slicedToArray","isShown","setIsShown","_jsxs","className","onMouseEnter","onMouseLeave","children","_jsx","controls","src","thumbnail","type","_Fragment","autoPlay","loop","title","Section","genre","movies","setMovies","_useState3","_useState4","pageState","setPageState","fetchData","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","responseBody","wrap","_context","prev","next","fetch","method","body","JSON","stringify","sent","json","data","movies_by_genre","values","stop","apply","arguments","useEffect","id","map","index","onClick","HeroSection","setMovie","Math","floor","random","length","muted","synopsis","NavBar","href","App","requestedPage","setRequestedPage","_useState5","_useState6","genres","setGenres","_useState7","_useState8","isFetching","setIsFetching","pageSize","reference_list","gs","concat","goalItems","currentItems","Object","value","np","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a18716c7.chunk.js","sourcesContent":["import { useState } from \"react\"\n\nconst Card = ({ movie }) => {\n  const [isShown, setIsShown] = useState(false)\n\n  return (\n    <div\n      className=\"card\"\n      onMouseEnter={() => setIsShown(true)}\n      onMouseLeave={() => setIsShown(false)}\n    >\n      {!isShown && (\n        <video className=\"video\" controls>\n          <source src={movie.thumbnail} type=\"video/mp4\" />\n        </video>\n      )}\n\n      {isShown && (\n        <>\n          <video className=\"video\" controls autoPlay={true} loop>\n            <source src={movie.thumbnail} type=\"video/mp4\" />\n          </video>\n          <div className=\"info-box\">\n            <p>{movie.title}</p>\n          </div>\n        </>\n      )}\n    </div>\n  )\n}\n\nexport default Card\n","import { useEffect, useState } from \"react\"\nimport Card from \"./Card\"\n\nconst Section = ({ genre }) => {\n  const [movies, setMovies] = useState(null)\n  const [pageState, setPageState] = useState(null)\n\n  const fetchData = async () => {\n    const response = await fetch(\"/.netlify/functions/getMovies\", {\n      method: \"POST\",\n      body: JSON.stringify({ genre: genre, pageState: pageState }),\n    })\n    const responseBody = await response.json()\n    setMovies(responseBody.data.movies_by_genre.values)\n    setPageState(responseBody.data.movies_by_genre.pageState)\n  }\n\n  useEffect(() => {\n    fetchData()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return (\n    <>\n      <h2 id={genre}>{genre}</h2>\n      {movies && (\n        <div className=\"movie-section\">\n          {movies.map((movie, index) => (\n            <Card key={movie.title} movie={movie} />\n          ))}\n          <div\n            className=\"more-button\"\n            onClick={() => {\n              setPageState(pageState)\n              fetchData()\n            }}\n          >\n            <i className=\"fas fa-angle-right\"></i>\n          </div>\n        </div>\n      )}\n    </>\n  )\n}\n\nexport default Section\n","import { useState, useEffect } from \"react\"\n\nconst HeroSection = () => {\n  const [movie, setMovie] = useState(null)\n  const pageState = null\n\n  const fetchData = async () => {\n    const response = await fetch(\"/.netlify/functions/getMovies\", {\n      method: \"POST\",\n      body: JSON.stringify({ genre: \"Sci-Fi\", pageState: pageState }),\n    })\n    const responseBody = await response.json()\n    const movies = responseBody.data.movies_by_genre.values\n    setMovie(movies[Math.floor(Math.random() * movies.length)])\n  }\n\n  useEffect(() => {\n    fetchData()\n  }, [])\n\n  return (\n    <>\n      {movie && (\n        <div className=\"hero\">\n          <video className=\"hero-video\" muted controls autoPlay={true} loop>\n            <source src={movie.thumbnail} type=\"video/mp4\" />\n          </video>\n\n          <div className=\"info-section\">\n            <h3 className=\"hero-blurb\">{movie.synopsis}</h3>\n            <div className=\"button-section\">\n              <div className=\"button play\">\n                <span>\n                  <i className=\"fas fa-play\"></i>\n                </span>\n                Play\n              </div>\n              <div className=\"button more\">\n                <span>\n                  <i className=\"fas fa-info-circle\"></i>\n                </span>\n                More info\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </>\n  )\n}\n\nexport default HeroSection\n","const NavBar = () => {\n  return (\n    <div className=\"navbar\">\n      <ul>\n        <li>\n          <div className=\"logo\"></div>\n        </li>\n        <li>\n          <a href=\"/\">Home</a>\n        </li>\n      </ul>\n    </div>\n  )\n}\n\nexport default NavBar\n","import \"./App.css\"\nimport { useEffect, useState } from \"react\"\nimport Section from \"./components/Section\"\nimport HeroSection from \"./components/HeroSection\"\nimport NavBar from \"./components/NavBar\"\n\nconst App = () => {\n  const pageSize = 4\n  const [requestedPage, setRequestedPage] = useState(0)\n  const [pageState, setPageState] = useState(null)\n  const [genres, setGenres] = useState(null)\n  const [isFetching, setIsFetching] = useState(false)\n\n  const fetchData = async () => {\n    if (! isFetching)  {\n      setIsFetching(true)\n      const response = await fetch(\"/.netlify/functions/getGenres\", {\n        method: \"POST\",\n        body: JSON.stringify({pageState, pageSize}),\n      })\n      const responseBody = await response.json()\n      setPageState(responseBody.data.reference_list.pageState)\n      setGenres(gs => (gs || []).concat(responseBody.data.reference_list.values))\n      setIsFetching(false)\n    }\n  }\n\n  useEffect(() => {\n    // we trigger the first page of genres at the beginning\n    setRequestedPage(1)\n  }, [])\n\n  useEffect(() => {\n    const goalItems = pageSize * requestedPage\n    const currentItems = (genres || []).length\n    const bottomReached = currentItems > 0 && pageState === null\n    // we ask for more genres if we are not at bottom of infinite scroll\n    // (and if there are less items than the nominally requested pages)\n    if ((goalItems > currentItems) && !bottomReached){\n      fetchData()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [requestedPage])\n\n  return (\n    <>\n      <NavBar />\n      <HeroSection />\n      {genres && (\n        <div className=\"container\">\n          {Object.values(genres).map((genre) => (\n            <Section key={genre.value} genre={genre.value} />\n          ))}\n        </div>\n      )}\n      <div\n        className=\"page-end\"\n        onMouseEnter={() => {\n          setRequestedPage( np => np + 1 )\n        }}\n      />\n    </>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}